{"ast":null,"code":"\"use strict\";\n/**\n * A response from a web request\n */\n\nvar Response =\n/** @class */\nfunction () {\n  function Response(statusCode, headers, body, url) {\n    if (typeof statusCode !== 'number') {\n      throw new TypeError('statusCode must be a number but was ' + typeof statusCode);\n    }\n\n    if (headers === null) {\n      throw new TypeError('headers cannot be null');\n    }\n\n    if (typeof headers !== 'object') {\n      throw new TypeError('headers must be an object but was ' + typeof headers);\n    }\n\n    this.statusCode = statusCode;\n    var headersToLowerCase = {};\n\n    for (var key in headers) {\n      headersToLowerCase[key.toLowerCase()] = headers[key];\n    }\n\n    this.headers = headersToLowerCase;\n    this.body = body;\n    this.url = url;\n  }\n\n  Response.prototype.isError = function () {\n    return this.statusCode === 0 || this.statusCode >= 400;\n  };\n\n  Response.prototype.getBody = function (encoding) {\n    if (this.statusCode === 0) {\n      var err = new Error('This request to ' + this.url + ' resulted in a status code of 0. This usually indicates some kind of network error in a browser (e.g. CORS not being set up or the DNS failing to resolve):\\n' + this.body.toString());\n      err.statusCode = this.statusCode;\n      err.headers = this.headers;\n      err.body = this.body;\n      err.url = this.url;\n      throw err;\n    }\n\n    if (this.statusCode >= 300) {\n      var err = new Error('Server responded to ' + this.url + ' with status code ' + this.statusCode + ':\\n' + this.body.toString());\n      err.statusCode = this.statusCode;\n      err.headers = this.headers;\n      err.body = this.body;\n      err.url = this.url;\n      throw err;\n    }\n\n    if (!encoding || typeof this.body === 'string') {\n      return this.body;\n    }\n\n    return this.body.toString(encoding);\n  };\n\n  return Response;\n}();\n\nmodule.exports = Response;","map":null,"metadata":{},"sourceType":"script"}